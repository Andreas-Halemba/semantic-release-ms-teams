default:
  image: node:18

stages:
  - install
  - test
  - sonarcloud
  - deploy

install:
  stage: install
  cache:
    - key:
        files:
          - ./package-lock.json
      paths:
        - ./node_modules
  artifacts:
    expire_in: 1w
    paths:
      - ./node_modules
      - ~/.npmrc
      - ./.husky
  only:
    refs:
      - master
      - merge_requests
  script:
    - |
      curl \
      --silent \
      --show-error \
      --fail \
      -u $ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD \
      $ARTIFACTORY_BASEURL/artifactory/api/npm/auth \
      > ~/.npmrc
    - npm ci

test:
  stage: test
  artifacts:
    paths:
      - coverage/lcov.info
  dependencies:
    - install
  only:
    refs:
      - master
      - merge_requests
  script:
    - npm run test

sonar:
  stage: sonarcloud
  image:
    name: 085039531053.dkr.ecr.eu-central-1.amazonaws.com/sonar-scanner-cli:latest
    entrypoint: ['']
  dependencies:
    - test
  variables:
    SONAR_TOKEN: '${SONAR_TOKEN}'
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar'
    GIT_DEPTH: '0'
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  only:
    refs:
      - master
      - merge_requests
  script:
    - |
      sonar-scanner \
        -Dsonar.qualitygate.wait=true \
        -Dsonar.organization=$SONARCLOUD_ORGANIZATION \
        -Dsonar.projectKey=$SONARCLOUD_ORGANIZATION_NAME\_$SONAR_PROJECT_KEY

test_release:
  stage: deploy
  when: manual
  only:
    refs:
      - master
  dependencies:
    - install
  artifacts:
    paths:
      - stats.html
  script:
    - |
      curl \
      --silent \
      --show-error \
      --fail \
      -u $ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD \
      $ARTIFACTORY_BASEURL/artifactory/api/npm/auth \
      > ~/.npmrc
    - git config --global user.email 'no-reply@iu.org'
    - git config --global user.name 'Gitlab Pipeline'
    - npm version $(cat package.json | grep version | head -1 | awk '{ print $2 }' | sed 's/[",]//g' | cut -d'-' -f1) --allow-same-version
    - cp public/index.html.dist index.html
    - npm run build
    - cp {artifactory,}.npmrc
    - sed -i 's/@iu\/formbuilder/@iu\/formbuilder-test/' package.json
    - npm publish

release:
  stage: deploy
  when: manual
  script:
    - |
        curl \
        --silent \
        --show-error \
        --fail \
        -u $ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD \
        $ARTIFACTORY_BASEURL/artifactory/api/npm/auth \
        > ~/.npmrc
    - echo "configure GIT ENVs for semantic release"
    - cp artifactory.npmrc .npmrc
    - export GIT_AUTHOR_NAME=$(git log -n 1 --format=format:'%an')
    - export GIT_COMMITTER_NAME=${GIT_AUTHOR_NAME}
    - export GIT_AUTHOR_EMAIL=$(git log -n 1 --format=format:'%ae')
    - export GIT_COMMITTER_EMAIL=$(GIT_AUTHOR_EMAIL)
    # semantic-release requires NPM_TOKEN to be set even if the auth is handled via npmrc
    # https://github.com/semantic-release/npm/issues/324
    - export NPM_TOKEN=foo
    - cp public/index.html.dist index.html
    - CI=true npm run release -- --repositoryUrl https://$GITLAB_RELEASE_USER:$GITLAB_RELEASE_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
